apply plugin: 'com.google.protobuf'

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$versions.protobuf"
    }

    plugins {
        // Optional: an artifact spec for a protoc plugin, with "grpc" as
        // the identifier, which can be referred to in the "plugins"
        // container of the "generateProtoTasks" closure.
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$versions.grpcPlugin"
        }
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                // Generates Python code in the output folder:
                python {}
                java {}
            }
            task.plugins {
                // Apply the "grpc" plugin whose spec is defined above, without
                // options.  Note the braces cannot be omitted, otherwise the
                // plugin will not be added. This is because of the implicit way
                // NamedDomainObjectContainer binds the methods.
                grpc {}
            }
        }
    }
}